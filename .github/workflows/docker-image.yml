name: Deploy

on:
  push:
    branches:
      - custom

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_KEY: ${{ secrets.SERVER_KEY }}
  NTFY_URL: ${{ secrets.NTFY_URL }}
  NTFY_TOPIC: ${{ secrets.NTFY_TOPIC }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t new-api .

      - name: Transfer image to server
        run: |
          docker save new-api | gzip | ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} 'cat - > /tmp/new-api.tar.gz'
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} 'docker load -i /tmp/new-api.tar.gz'

      - name: SSH to server and deploy
        run: |
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} 'cd new-api && docker compose pull && docker compose up -d'

      - name: Send notification
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d '{"message": "New-API deployed successfully."}' \
            ${{ env.NTFY_URL }}/${{ env.NTFY_TOPIC }}
